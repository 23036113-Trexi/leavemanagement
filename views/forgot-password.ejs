<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Forgot Password - GeoLah Leave Management</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Manrope:wght@200..800&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/css/login.css">
</head>
<body>
    <div class="login-container">
        <div class="login-card">
            <header class="login-header">
                <div class="company-logo">
                    <img src="/images/icon.png" alt="Company Logo">
                </div>
                <h2>Reset Password</h2>
                <p>Enter your email and new password</p>
            </header>

            <main class="login-main">
                <% if (error) { %>
                    <div class="error-message">
                        <span class="error-icon">⚠</span>
                        <%= error %>
                    </div>
                <% } %>

                <% if (success) { %>
                    <div class="success-message">
                        <span class="success-icon">✓</span>
                        <%= success %>
                    </div>
                <% } %>

                <form class="login-form" action="/forgot-password" method="POST">
                    <div class="form-group">
                        <label for="email" class="form-label">Email Address</label>
                        <input 
                            type="email" 
                            id="email" 
                            name="email" 
                            class="form-input" 
                            placeholder="Enter your registered email address"
                            required
                            autocomplete="email"
                        >
                    </div>

                    <div class="form-group">
                        <label for="confirmEmail" class="form-label">Confirm Email Address</label>
                        <input 
                            type="email" 
                            id="confirmEmail" 
                            name="confirmEmail" 
                            class="form-input" 
                            placeholder="Re-enter your email address"
                            required
                            autocomplete="email"
                        >
                    </div>

                    <div class="form-group">
                        <label for="newPassword" class="form-label">New Password</label>
                        <input 
                            type="password" 
                            id="newPassword" 
                            name="newPassword" 
                            class="form-input" 
                            placeholder="Enter your new password"
                            required
                            minlength="8"
                            autocomplete="new-password"
                        >
                        <div id="passwordStrength" class="password-feedback"></div>
                    </div>

                    <div class="form-group">
                        <label for="confirmPassword" class="form-label">Confirm New Password</label>
                        <input 
                            type="password" 
                            id="confirmPassword" 
                            name="confirmPassword" 
                            class="form-input" 
                            placeholder="Re-enter your new password"
                            required
                            minlength="8"
                            autocomplete="new-password"
                        >
                        <div id="passwordMatch" class="password-feedback"></div>
                    </div>

                    <button type="submit" class="login-btn" id="resetBtn">
                        Reset Password
                    </button>
                </form>

                <div class="back-to-login-section">
                    <a href="/" class="back-to-login-link">
                        ← Back to Login
                    </a>
                </div>

            </main>

            <footer class="login-footer">
                <p>&copy; 2025 GeoLah. All rights reserved.</p>
            </footer>
        </div>
    </div>

    <script>
        const emailInput = document.querySelector('#email');
        const confirmEmailInput = document.querySelector('#confirmEmail');
        const passwordInput = document.querySelector('#newPassword');
        const confirmPasswordInput = document.querySelector('#confirmPassword');
        const resetBtn = document.querySelector('#resetBtn');
        const passwordStrengthDiv = document.querySelector('#passwordStrength');
        const passwordMatchDiv = document.querySelector('#passwordMatch');

        // Email validation and matching
        function validateEmails() {
            const email = emailInput.value;
            const confirmEmail = confirmEmailInput.value;
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            
            if (email && !emailRegex.test(email)) {
                emailInput.setCustomValidity('Please enter a valid email address');
                return false;
            } else {
                emailInput.setCustomValidity('');
            }
            
            if (confirmEmail && email !== confirmEmail) {
                confirmEmailInput.setCustomValidity('Email addresses do not match');
                return false;
            } else {
                confirmEmailInput.setCustomValidity('');
            }
            
            return email && confirmEmail && email === confirmEmail;
        }

        // Password strength validation
        function validatePasswordStrength() {
            const password = passwordInput.value;
            let strength = 0;
            let feedback = [];

            if (password.length >= 8) strength++;
            else feedback.push('At least 8 characters');

            if (/[a-z]/.test(password)) strength++;
            else feedback.push('lowercase letter');

            if (/[A-Z]/.test(password)) strength++;
            else feedback.push('uppercase letter');

            if (/\d/.test(password)) strength++;
            else feedback.push('number');

            if (/[^a-zA-Z0-9]/.test(password)) strength++;
            else feedback.push('special character');

            const strengthLevels = ['Very Weak', 'Weak', 'Fair', 'Good', 'Strong'];
            const strengthColors = ['#ff4444', '#ff8800', '#ffdd00', '#88dd00', '#44dd44'];

            if (password.length > 0) {
                passwordStrengthDiv.innerHTML = `
                    <span style="color: ${strengthColors[strength]}">
                        ${strengthLevels[strength]} ${feedback.length > 0 ? '- Missing: ' + feedback.join(', ') : ''}
                    </span>
                `;
            } else {
                passwordStrengthDiv.innerHTML = '';
            }

            return strength >= 3;
        }

        // Password matching validation
        function validatePasswordMatch() {
            const password = passwordInput.value;
            const confirmPassword = confirmPasswordInput.value;
            
            if (confirmPassword && password !== confirmPassword) {
                passwordMatchDiv.innerHTML = '<span style="color: #ff4444">Passwords do not match</span>';
                confirmPasswordInput.setCustomValidity('Passwords do not match');
                return false;
            } else if (confirmPassword && password === confirmPassword) {
                passwordMatchDiv.innerHTML = '<span style="color: #44dd44">Passwords match</span>';
                confirmPasswordInput.setCustomValidity('');
                return true;
            } else {
                passwordMatchDiv.innerHTML = '';
                confirmPasswordInput.setCustomValidity('');
                return false;
            }
        }

        // Enable/disable submit button
        function updateSubmitButton() {
            const emailsValid = validateEmails();
            const passwordStrong = validatePasswordStrength();
            const passwordsMatch = validatePasswordMatch();
            
            resetBtn.disabled = !(emailsValid && passwordStrong && passwordsMatch);
        }

        // Event listeners
        emailInput.addEventListener('input', updateSubmitButton);
        confirmEmailInput.addEventListener('input', updateSubmitButton);
        passwordInput.addEventListener('input', updateSubmitButton);
        confirmPasswordInput.addEventListener('input', updateSubmitButton);

        // Form submission
        document.querySelector('.login-form').addEventListener('submit', function(e) {
            const button = document.querySelector('.login-btn');
            
            if (!button.disabled) {
                button.disabled = true;
                button.textContent = 'Resetting Password...';
            }
        });

        // Clear messages on input focus
        [emailInput, confirmEmailInput, passwordInput, confirmPasswordInput].forEach(input => {
            input.addEventListener('focus', function() {
                const errorMessage = document.querySelector('.error-message');
                const successMessage = document.querySelector('.success-message');
                
                if (errorMessage) errorMessage.style.opacity = '0.5';
                if (successMessage) successMessage.style.opacity = '0.5';
            });
        });
    </script>
</body>
</html>